101100110 // loadimmonelsl #6 //index = 64 = 1 << 6
011000101 // copy r0 r5
101010110 // loadfromaddress #6 //r2 = 4 bits (last 4 bits)
011000010 // copy r0, r2
110010011 // clear r3 // count = 0
101000101 // loadimmonelslminusone #5 //mem_offset = 31 = 2 << 5 - 1
100001000 // memoffset
110001101 // match: loadandsetstringmatchr2 r5 // load 8 bit string to r0 then parallel checks if r2 last 4 bit matches r0 string. set flag bit to 1 if match, 0 otherwise
110100011 // incrementifset r3 // increment r3 if flag bit set
111001101 // decrement r5 // outer loop while index > 0
010111101 // bn match 
101101000 // loadimm #0 //mem_offset = 0
100001000 // memoffset
011011000 // copy r3 r0 // store it to mem[7]
101001111 // store #7
