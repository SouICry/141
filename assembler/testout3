101000110 // loadimmonelslminusone #6
011000011 // copy r0 r3
101101100 // loadimm #4 // initialize i
011000001 // copy r0 r1 // r1 = 4
101100100 // loadimmonelsl #4 // r0 = 16
110011001 // addto r1 // i = 20 = 16 + 4
101000111 // loadimmonelslminusone #7 // mem_offset = 127 = 2 << 7 - 1
100001000 // memoffset
011001010 // loop1: copy r1 r2 // j = i-1
111001010 // decrement r2
110000001 // load r1 // a = array[i]
011000100 // copy r0 r4
001010100 // loop2: loadandabsdiff r2 r4 // b = array[j], r0 = abs(a-b)
110111011 // writeminto r3 // min = min(r0, min)
000010110 // decrementandbranchifnotzero r2 loop2
111000001 // decrementandsetisone r1
010111000 // bn loop1 // store min into mem[127]
011011000 // copy r3 r0
101001000 // store #0
